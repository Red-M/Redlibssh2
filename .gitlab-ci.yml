
.cicd_testing_defaults: &cicd_testing_defaults
  stage: test
  script:
    - ./ci/gitlab/linux/install_deb_mirror.sh
    - apt update && apt install -y make curl wget openssh-client openssh-server git cmake libssl-dev zlib1g-dev
    - apt install -y python3 python3-dev python3-distutils python3-setuptools cython3
    - wget -O get-pip.py "https://bootstrap.pypa.io/get-pip.py"
    - python3 ./get-pip.py
    - git submodule update --init --recursive
    - pip3 install -U readme-renderer
    - python3 -m readme_renderer ./README.rst -o /tmp/README.html
    - \rm ./ssh2/*.c
    - python3 setup.py build_ext --inplace
    - pip install -e .[tests]
  variables:
    REDLIBSSH2_BUILD_TRACING: 1

.build_refs: &build_refs
  only:
    refs:
      - master
      - schedules
      - /^release\/.*/
      - build_ci_testing

.build_mlinux_defaults: &build_mlinux_defaults
  image: docker:dind
  services:
    - docker:dind
  variables: &build_mlinux_defaults_variables
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  script: &build_mlinux_defaults_script
    - apk add --no-cache bash git
    - git submodule update --init --recursive
  artifacts:
    paths:
      - wheelhouse

.build_mlinux_2010_process: &build_mlinux_2010_release_job
  <<: *build_mlinux_defaults
  script: &build_mlinux_2010_release_script
    - *build_mlinux_defaults_script
    - ./ci/gitlab/linux/build_manylinux.sh quay.io/pypa/manylinux2010_x86_64

.build_mlinux_2014_process: &build_mlinux_2014_release_job
  <<: *build_mlinux_defaults
  script: &build_mlinux_2014_release_script
    - *build_mlinux_defaults_script
    - ./ci/gitlab/linux/build_manylinux.sh quay.io/pypa/manylinux2014_x86_64

.build_mlinux_2_process: &build_mlinux_2_release_job
  <<: *build_mlinux_defaults
  script: &build_mlinux_2_release_script
    - *build_mlinux_defaults_script
    - ./ci/gitlab/linux/build_manylinux.sh quay.io/pypa/manylinux_2_24_x86_64

.build_mlinux_pypy_process: &build_mlinux_pypy_release_job
  <<: *build_mlinux_defaults
  script: &build_mlinux_pypy_release_script
    - *build_mlinux_defaults_script
    - ./ci/gitlab/linux/build_manylinux.sh pypywheels/manylinux2010-pypy_x86_64 pypy pypy

.build_osx_process: &build_osx_release_job
  tags:
    - osx
  variables: &build_osx_release_variables
    SYSTEM_LIBSSH2: 1
  script: &build_osx_release_script
    - git submodule update --init --recursive
    - brew cleanup
    - brew update
    - brew install cmake ccache
    - brew outdated openssl || brew upgrade openssl || echo "y"
    - brew link --overwrite python@3.9 || brew install python@3.9 || brew link --overwrite python@3.9
    - which python3
    - python3 -c "from __future__ import print_function; import ssl; from platform import python_version; print(ssl.OPENSSL_VERSION); print(python_version())"
    - sudo ./ci/install-ssh2.sh
    - sudo chown -R $(whoami) ./src
    - rm ./src/CMakeCache.txt
    - cp /usr/local/lib/libssh2* .
    - mkdir -p wheelhouse
    - ln -s ./wheelhouse ./wheels
    - brew install pyenv || brew outdated pyenv || brew upgrade pyenv
    - ./ci/travis/pyenv-wheel.sh
  artifacts:
    paths:
      - wheelhouse

stages:
  - test
  - build

release_mlinux_2010_wheel:
  <<: *build_mlinux_2010_release_job
  <<: *build_refs
  stage: build

release_mlinux_2014_wheel:
  <<: *build_mlinux_2014_release_job
  <<: *build_refs
  stage: build

release_mlinux_2_wheel:
  <<: *build_mlinux_2_release_job
  <<: *build_refs
  stage: build

release_mlinux_pypy_wheel:
  <<: *build_mlinux_pypy_release_job
  <<: *build_refs
  stage: build

release_osx_wheel:
  <<: *build_osx_release_job
  <<: *build_refs
  stage: build


tests_debstable:
  <<: *cicd_testing_defaults
  image: debian:stable

tests_deboldstable:
  <<: *cicd_testing_defaults
  image: debian:oldstable

tests_debtesting:
  <<: *cicd_testing_defaults
  image: debian:testing

tests_latest_libssh2:
  image: debian:stable
  stage: test
  script:
    - ./ci/gitlab/linux/install_deb_mirror.sh
    - apt update && apt install -y make curl wget openssh-client openssh-server git cmake libssl-dev zlib1g-dev
    - apt install -y python3 python3-dev python3-distutils
    - wget -O get-pip.py "https://bootstrap.pypa.io/get-pip.py"
    - python3 ./get-pip.py
    - pip3 install -U readme-renderer
    - python3 -m readme_renderer ./README.rst -o /tmp/README.html
    - git submodule update --init --recursive
    - cd ./libssh2
    - git checkout master
    - git pull origin master
    - cd ../
    - python3 setup.py build_ext --inplace

tests_osx:
  stage: test
  variables:
    <<: *build_osx_release_variables
    PYENV: 3.7.11
  script:
    - *build_osx_release_script
  tags:
    - osx


#~ tests_py3.9:
  #~ <<: *cicd_testing_defaults
  #~ image: debian:11

#~ tests_py3.7:
  #~ <<: *cicd_testing_defaults
  #~ image: debian:10

#~ tests_py3.5:
  #~ <<: *cicd_testing_defaults
  #~ image: debian:9


#~ release_windows_wheel:
  #~ <<: *build_release_job
  #~ script:
    #~ - apk add --no-cache bash git
    #~ - git submodule update --init --recursive
    #~ - chmod +x ./ci/gitlab/windows/build.sh
    #~ - ./ci/gitlab/windows/build.sh
  #~ stage: build
  #~ only:
    #~ refs:
      #~ - master
      #~ - schedules
      #~ - /^release\/.*/
      #~ - build_ci_testing
